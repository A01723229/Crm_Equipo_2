USE CRM_DB;

-- Get Total Sales (Number of Deals)
CREATE OR ALTER PROCEDURE GetTotalSales
AS
BEGIN
    SET NOCOUNT ON;
    SELECT COUNT(*) AS totalSales FROM Deal;
END;

-- Get Total Income (Sum of Deal Values)
CREATE OR ALTER PROCEDURE GetTotalIncome
AS
BEGIN
    SET NOCOUNT ON;
    SELECT SUM(DealValue) AS totalIncome FROM Deal;
END;

-- Get Total Clients (was Customer)
CREATE OR ALTER PROCEDURE GetTotalClients
AS
BEGIN
    SET NOCOUNT ON;
    SELECT COUNT(*) AS totalClients FROM Client;
END;

-- Get Completion Rate (Completed Tasks %)
CREATE OR ALTER PROCEDURE GetCompletionRate
AS
BEGIN
    SET NOCOUNT ON;
    SELECT 
        (COUNT(CASE WHEN Status = 'Completed' THEN 1 END) * 100.0 / NULLIF(COUNT(*), 0)) 
        AS completionRate 
    FROM Task;
END;

-- Get Task Stats by Priority
CREATE OR ALTER PROCEDURE GetTaskStats
AS
BEGIN
    SET NOCOUNT ON;
    SELECT Priority, COUNT(*) AS count 
    FROM Task 
    GROUP BY Priority;
END;

-- Get Completed Tasks
CREATE OR ALTER PROCEDURE GetCompletedTasks
AS
BEGIN
    SET NOCOUNT ON;
    SELECT COUNT(*) AS completedTasks 
    FROM Task 
    WHERE Status = 'Completed';
END;

-- Get Overdue Tasks (Deadline passed, not completed)
CREATE OR ALTER PROCEDURE GetOverdueTasks
AS
BEGIN
    SET NOCOUNT ON;
    SELECT COUNT(*) AS overdueTasks 
    FROM Task 
    WHERE DeadLine < GETDATE() AND Status != 'Completed';
END;

-- Get Tasks Close to Deadline (Next 7 days)
CREATE OR ALTER PROCEDURE GetTasksCloseToDeadline
AS
BEGIN
    SET NOCOUNT ON;
    SELECT Title, DeadLine 
    FROM Task 
    WHERE DeadLine BETWEEN GETDATE() AND DATEADD(DAY, 7, GETDATE());
END;

-- Get Past Deals (Latest 5 deals with Client info)
CREATE OR ALTER PROCEDURE GetPastDeals
AS
BEGIN
    SET NOCOUNT ON;
    SELECT 
        c.ClientName, 
        d.DealValue, 
        d.Comission, 
        d.DeadLine, 
        d.PaymentStatus 
    FROM Deal d 
    INNER JOIN Client c ON d.ClientID = c.ClientID
    ORDER BY d.DeadLine DESC 
    OFFSET 0 ROWS FETCH NEXT 5 ROWS ONLY;
END;

-- Get Total Commissions (Sum of commissions from completed deals)
CREATE OR ALTER PROCEDURE GetTotalCommissions
AS
BEGIN
    SET NOCOUNT ON;
    SELECT SUM(Comission) AS totalCommissions 
    FROM Deal 
    WHERE PaymentStatus = 'Completed';
END;

-- Get Commission Rate (Average commission percentage across all deals)
CREATE OR ALTER PROCEDURE GetCommissionRate
AS
BEGIN
    SET NOCOUNT ON;
    SELECT 
        (SUM(Comission) * 100.0 / NULLIF(SUM(DealValue), 0)) AS commissionRate
    FROM Deal;
END;

-- Get Pending Payments (Deals that have not been paid yet)
CREATE OR ALTER PROCEDURE GetPendingPayments
AS
BEGIN
    SET NOCOUNT ON;
    SELECT 
        c.ClientName,
        d.Comission,
        d.DeadLine AS PaymentDate
    FROM Deal d
    INNER JOIN Client c ON d.ClientID = c.ClientID
    WHERE d.PaymentStatus = 'Pending'
    ORDER BY d.DeadLine;
END;

-- Get Top Commissions (Top 5 deals with the highest commissions)
CREATE OR ALTER PROCEDURE GetTopCommissions
AS
BEGIN
    SET NOCOUNT ON;
    SELECT TOP 5 
        c.ClientName,
        d.Comission
    FROM Deal d
    INNER JOIN Client c ON d.ClientID = c.ClientID
    ORDER BY d.Comission DESC;
END;

-- Get All Deals (List of all deals with relevant client and payment info)
CREATE OR ALTER PROCEDURE GetAllDeals
AS
BEGIN
    SET NOCOUNT ON;
    SELECT 
        c.ClientName,
        d.DealValue,
        d.Comission,
        d.DeadLine AS DealDate,
        d.PaymentStatus
    FROM Deal d
    INNER JOIN Client c ON d.ClientID = c.ClientID
    ORDER BY d.DeadLine DESC;
END;

-- Get Client List (List of all clients with contact information)
CREATE OR ALTER PROCEDURE GetClientList
AS
BEGIN
    SET NOCOUNT ON;
    SELECT 
        ClientName,
        Company AS Organization,
        Telephone,
        Email
    FROM Client;
END;

-- Get Selected Client (Retrieve full details for a specific client)
CREATE OR ALTER PROCEDURE GetSelectedClient
    @ClientID INT
AS
BEGIN
    SET NOCOUNT ON;
    SELECT 
        ClientName,
        Company AS Organization,
        Telephone,
        Email,
        Description
    FROM Client
    WHERE ClientID = @ClientID;
END;

CREATE PROCEDURE GetAllTasks
AS
BEGIN
  SELECT
    TaskID,
    Title,
    [Status],
    Priority,
    Stage,
    Description,
    DeadLine,
    DealID,
    SellerID
  FROM Task;
END;

--New 4/2
CREATE PROCEDURE GetAllProducts
AS
BEGIN
  SELECT
    ProductID,
    Name,
    Description,
    Category,
    Price
  FROM Product;
END;