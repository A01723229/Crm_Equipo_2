-- Table: Seller
CREATE TABLE Seller (
    SellerID INT IDENTITY(1,1) PRIMARY KEY,
    SellerName VARCHAR(50) NOT NULL,
    Email VARCHAR(50) UNIQUE NOT NULL,
    [Password] VARCHAR(255) NOT NULL,
    [Role] VARCHAR(20) NOT NULL,
    Company VARCHAR(50) NOT NULL
);

-- Table: Client (Managed by Seller)
CREATE TABLE Client (
    ClientID INT IDENTITY(1,1) PRIMARY KEY,
    ClientName VARCHAR(100) NOT NULL,
    Company VARCHAR(50) NOT NULL,
    Description VARCHAR(200),
    Telephone VARCHAR(15) NOT NULL,
    Email VARCHAR(50) UNIQUE NOT NULL,
    SellerID INT NOT NULL,
    CONSTRAINT fk_client_seller FOREIGN KEY (SellerID) REFERENCES Seller(SellerID)
);

-- Table: Deal (Belongs to a Client, created by Seller)
CREATE TABLE Deal (
    DealID INT IDENTITY(1,1) PRIMARY KEY,
    DealValue DECIMAL(10,2) NOT NULL CHECK (DealValue > 0),
    Comission DECIMAL(10,2) NOT NULL CHECK (Comission >= 0),
    DeadLine DATE,
    PaymentStatus VARCHAR(30) CHECK (PaymentStatus IN ('Pending', 'Completed', 'Overdue')) DEFAULT 'Pending',
    Description VARCHAR(200),
    ClientID INT NOT NULL,
    SellerID INT NOT NULL,
    CONSTRAINT fk_deal_client FOREIGN KEY (ClientID) REFERENCES Client(ClientID),
    CONSTRAINT fk_deal_seller FOREIGN KEY (SellerID) REFERENCES Seller(SellerID)
);

-- Table: Task (MUST belong to a Deal)
CREATE TABLE Task (
    TaskID INT IDENTITY(1,1) PRIMARY KEY,
    Title VARCHAR(50) NOT NULL,
    [Status] VARCHAR(20) NOT NULL CHECK ([Status] IN ('Pending', 'In Progress', 'Completed')),
    Priority VARCHAR(10) NOT NULL CHECK (Priority IN ('Critical', 'High', 'Low')) DEFAULT 'Low',
    Description VARCHAR(200),
    DeadLine DATE,
    DealID INT NOT NULL,
    SellerID INT, -- Optional: who is responsible
    CONSTRAINT fk_task_deal FOREIGN KEY (DealID) REFERENCES Deal(DealID),
    CONSTRAINT fk_task_seller FOREIGN KEY (SellerID) REFERENCES Seller(SellerID)
);

-- Optional Performance Indexes
CREATE INDEX idx_client_email ON Client(Email);
CREATE INDEX idx_task_status ON Task([Status]);
CREATE INDEX idx_task_deadline ON Task(DeadLine);
CREATE INDEX idx_deal_payment_status ON Deal(PaymentStatus);

--New 3/29
ALTER TABLE Task
ADD Stage VARCHAR(20) NOT NULL
    CONSTRAINT chk_task_stage CHECK (Stage IN (
        'Requested', 'Ready to Start', 'Working', 'Waiting', 'Review', 'Done'
    )) DEFAULT 'Requested';

